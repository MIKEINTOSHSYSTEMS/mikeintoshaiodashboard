# run "docker-compose -p derejame_sys up -d" to run with stack name

version: '3.9'
#docker-compose -p derejame_sys up -d
#docker-compose -p derejame_sys down --volumes --rmi all
#docker-compose -f docker-compose.yml -p derejame_sys up -d
#docker-compose -f docker-compose.yml -p derejame_sys down --volumes --rmi all 
services:
  php:
    image: mikeintosh/mikeintosh-phpdashboard-app:latest
    build:
      context: .
      dockerfile: Dockerfile
    container_name: derejame_system
    volumes:
      - ./analytics:/var/www/html/analytics
      - ./app:/var/www/html/app
      - ./api:/var/www/html/api
      - ./assets:/var/www/html/assets
      - ./backend:/var/www/html/backend
      - ./dist:/var/www/html/dist
      # - ./docker:/var/www/html/docker
      - ./help:/var/www/html/help
      - ./map_files:/var/www/html/map_files
      - ./src:/var/www/html/src
      - ./styles:/var/www/html/styles
      - ./test:/var/www/html/test
      - ./config:/var/www/html/config
      - ./_config.yml:/var/www/html/_config.yml
      - ./compareData.html:/var/www/html/compareData.html
      - ./demo.php:/var/www/html/demo.php
      - ./guide.html:/var/www/html/guide.html
      - ./index.php:/var/www/html/index.php
      - ./main.php:/var/www/html/main.php
      - ./postgre.php:/var/www/html/postgre.php
      - ./script.js:/var/www/html/script.js
      - ./style.css:/var/www/html/style.css
      - ./test.html:/var/www/html/test.html
      - ./test.php:/var/www/html/test.php
      - ./404.php:/var/www/html/404.php
      - ./start.php:/var/www/html/start.php
      - ./server.html:/var/www/html/server.html
      - ./manifest.json:/var/www/html/manifest.json
      - ./pwabuilder-sw.js:/var/www/html/pwabuilder-sw.js
    # ports:
      # - "8080:80" # uncomment to expose the php services
    expose:
      - "9009"
    depends_on:
      - db
    networks:
      derejanet:
        ipv4_address: 192.168.160.10

  nginx:
    image: nginx:latest
    container_name: derejame_nginx
    ports:
      - "8880:80"
      - "8843:443"
    volumes:
      - ./config/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./analytics:/var/www/html/analytics
      - ./app:/var/www/html/app
      - ./assets:/var/www/html/assets
      - ./backend:/var/www/html/backend
      - ./dist:/var/www/html/dist
      # - ./docker:/var/www/html/docker
      - ./help:/var/www/html/help
      - ./map_files:/var/www/html/map_files
      - ./src:/var/www/html/src
      - ./styles:/var/www/html/styles
      - ./test:/var/www/html/test
      - ./config:/var/www/html/config
      - ./config/php.ini:/usr/local/etc/php/php.ini
      - ./_config.yml:/var/www/html/_config.yml
      - ./compareData.html:/var/www/html/compareData.html
      - ./demo.php:/var/www/html/demo.php
      - ./guide.html:/var/www/html/guide.html
      - ./index.php:/var/www/html/index.php
      - ./main.php:/var/www/html/main.php
      - ./postgre.php:/var/www/html/postgre.php
      - ./script.js:/var/www/html/script.js
      - ./style.css:/var/www/html/style.css
      - ./test.html:/var/www/html/test.html
      - ./test.php:/var/www/html/test.php
      - ./404.php:/var/www/html/404.php
      - ./manifest.json:/var/www/html/manifest.json
      - ./pwabuilder-sw.js:/var/www/html/pwabuilder-sw.js
    depends_on:
      - php
    networks:
      derejanet:
        ipv4_address: 192.168.160.20

  metabase:
    image: metabase/metabase:latest
    container_name: derjame_metabase
    hostname: metabase
    volumes:
      - derejaviz:/dev/random:ro
    ports:
      - "4000:3000"
    environment:
      MB_DB_FILE: /dev/random/merqdereja.db
      MB_DB_TYPE: postgres
      MB_DB_DBNAME: merqderejadb
      MB_DB_PORT: 5432
      MB_DB_USER: merqderejadb
      MB_DB_PASS: merqderejadb
      MB_DB_HOST: postgres
      MB_ADMIN_EMAIL: dev@merqconsultancy.org
      MB_ADMIN_FIRST_NAME: MERQ
      MB_ADMIN_PASSWORD: merqderejadev0
    depends_on:
      - postgres
    networks:
      derejanet:
        ipv4_address: 192.168.160.30

  postgres:
    image: postgres:latest
    container_name: derejame_postgres
    hostname: postgres
    environment:
      POSTGRES_DB: merqderejadb
      POSTGRES_USER: merqderejadb
      POSTGRES_PASSWORD: merqderejadb
    volumes:
      - ./src/merqderejadb:/docker-entrypoint-initdb.d/merqderejadb
    networks:
      derejanet:
        ipv4_address: 192.168.160.40

  db:
    image: mariadb:latest
    container_name: derejame_mariadb
    restart: always
    environment:
      MYSQL_ROOT_HOST: localhost
      MYSQL_DATABASE: me_dereja
      MYSQL_ROOT_PASSWORD: merqderejadmin
      MYSQL_USER: me_dereja
      MYSQL_PASSWORD: me_dereja
    volumes:
      - ./src/dere_dev.sql:/docker-entrypoint-initdb.d/dere_dev.sql
      - ./mysql-init:/docker-entrypoint-initdb.d
    networks:
      derejanet:
        ipv4_address: 192.168.160.50

  phpmyadmin:
    image: phpmyadmin:latest
    restart: always
    ports:
      - "3307:80"
    environment:
      PMA_ARBITRARY: 1
      PMA_HOSTS: db
      PMA_USER: me_dereja
      PMA_PASSWORD: me_dereja
      UPLOAD_LIMIT: 300M
    networks:
      derejanet:
        ipv4_address: 192.168.160.60

  pgadmin:
    image: dpage/pgadmin4:latest
    ports:
      - "5454:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: dev@merqconsultancy.org
      PGADMIN_DEFAULT_PASSWORD: merqderejadev
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      derejanet:
        ipv4_address: 192.168.160.70

  mongo:
    image: mongo:latest
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: merqderejadev
      MONGO_INITDB_ROOT_PASSWORD: merqderejadev
    volumes:
      - mongodata:/data/db
    networks:
      derejanet:
        ipv4_address: 192.168.160.80

  mongo-express:
    image: mongo-express:latest
    restart: always
    ports:
      - "8018:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: merqderejadev
      ME_CONFIG_MONGODB_ADMINPASSWORD: merqderejadev
      ME_CONFIG_MONGODB_URL: mongodb://merqderejadev:merqderejadev@mongo:27017/
      ME_CONFIG_BASICAUTH_USERNAME: merqderejauser
      ME_CONFIG_BASICAUTH_PASSWORD: merqderejauser
      ME_CONFIG_SSL_ENABLED: 'false'
    networks:
      derejanet:
        ipv4_address: 192.168.160.90

  chat:
    image: derejame_chatbot
    container_name: derejame_chatbot
    build:
      context: .
      dockerfile: Dockerfile
      target: ai_chatbot
    ports:
      - "8502:8502"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://chat:8502/_stcore/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s  # Delay health check for 30 seconds

    volumes:
      - ./ai/chat:/ai/chat
    environment:
      - PYTHONUNBUFFERED=1
    networks:
      derejanet:
        ipv4_address: 192.168.160.100

networks:
  derejanet:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.160.0/24

volumes:
  derejaviz: 
  pgadmin-data:
  mongodata:
